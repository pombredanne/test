_help = help

class Autoloader(object):
    def __init__(self, module_name):
        self.__module_name = module_name
        self.__module = None

    def _load_module(self):
        if self.__module is None:
            self.__module = __import__(self.__module_name)

    def __getattr__(self, name):
        self._load_module()
        return getattr(self.__module, name)

    def __dir__(self):
        self._load_module()
        return dir(self.__module)

    def help(self):
        _help(self.__module)


def help(x):
    if isinstance(x, Autoloader):
        x._load_module()
        x.help()
    else:
        _help(x)

chainer = Autoloader('chainer')
cupy = Autoloader('cupy')
json = Autoloader('json')
np = Autoloader('numpy')
onnx = Autoloader('onnx')
os = Autoloader('os')
sys = Autoloader('sys')
threading = Autoloader('threading')
tf = Autoloader('tensorflow')
torch = Autoloader('torch')
